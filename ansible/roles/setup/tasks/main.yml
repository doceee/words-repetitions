- name: Setup environment
  block:
    - name: Ensure git package is installed
      apt:
        name:
          - git
        state: present
        update_cache: yes

    - import_tasks: docker-install.yml

    - name: Copy the private ssh key to the server
      ansible.builtin.copy:
        src: './ssh_keys/{{ ssh_key }}'
        dest: '~/.ssh/{{ ssh_key }}'
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: '0600'

    - name: Create the target directory for the repository
      ansible.builtin.file:
        path: '{{ project_dir }}'
        state: directory
        owner: '{{ ansible_user }}'
        group: '{{ ansible_user }}'
        mode: '0755'

    - name: Clone the Git repository
      ansible.builtin.git:
        repo: '{{ repo_url }}'
        dest: '{{ project_dir }}'
        version: '{{ repo_version }}'
        accept_hostkey: yes
        key_file: '~/.ssh/{{ ssh_key }}'
      become_user: '{{ ansible_user }}'

    - name: Create frontend .env file
      template:
        src: 'frontend.env.j2'
        dest: '{{ project_dir }}/frontend/.env'
        mode: '0600'

    - name: Create backend .env file
      template:
        src: 'backend.env.j2'
        dest: '{{ project_dir }}/backend/.env'
        mode: '0600'
      no_log: true

    - name: Create landing .env file
      template:
        src: 'landing.env.j2'
        dest: '{{ project_dir }}/landing/.env'
        mode: '0600'
      no_log: true

    - name: Create main .env file
      template:
        src: 'env.j2'
        dest: '{{ project_dir }}/.env'
        mode: '0600'
      no_log: true

    - name: Run docker compose
      shell: |
        docker compose up -d --build
      args:
        chdir: '{{ project_dir }}'

    - name: Show message after running docker compose
      debug:
        msg: 'Docker Compose has been started successfully!'
